/*Copyright (c) 2016-2017 cmt.mu All Rights Reserved.
 This software is the confidential and proprietary information of cmt.mu You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with cmt.mu*/
package com.mu.cmt.pfs.pfsdb.models.procedure;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.io.Serializable;
import java.math.BigInteger;
import java.util.List;
import java.util.Objects;

import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class ProcOr105pk0CpyfabgetCpyFabResponsePoutListCpyFab implements Serializable {


    @ColumnAlias("FABDES")
    private String fabdes;

    @ColumnAlias("FABORIEN")
    private BigInteger faborien;

    @ColumnAlias("MARKERTYP")
    private String markertyp;

    @ColumnAlias("FABTYP")
    private String fabtyp;

    @ColumnAlias("STR")
    private String str;

    @ColumnAlias("STRIPEID")
    private String stripeid;

    @ColumnAlias("INSIDE")
    private String inside;

    @ColumnAlias("OUTSIDE")
    private String outside;

    @ColumnAlias("FABDCODELIST")
    private String fabdcodelist;

    @ColumnAlias("FABIND")
    private String fabind;

    @ColumnAlias("CUTSTR")
    private String cutstr;

    @ColumnAlias("INTREFNO")
    private String intrefno;

    @ColumnAlias("INTREFNO_VER")
    private BigInteger intrefnoVer;

    @ColumnAlias("ENABLESAHDE")
    private String enablesahde;

    @ColumnAlias("SRC_COPY")
    private String srcCopy;

    @ColumnAlias("ORDCAT")
    private String ordcat;

    @ColumnAlias("ORDERTYPE")
    private String ordertype;

    @ColumnAlias("COPYSRCMSG")
    private String copysrcmsg;

    @ColumnAlias("CHK_FABLIB_MAT")
    private String chkFablibMat;

    @ColumnAlias("CHK_ORDFAB")
    private String chkOrdfab;

    @ColumnAlias("EXP_FABORIEN_REQ")
    private String expFaborienReq;

    @ColumnAlias("EXP_MARKERTYP_REQ")
    private String expMarkertypReq;

    @ColumnAlias("EXP_FABORIEN_CONDMSG")
    private String expFaborienCondmsg;

    @ColumnAlias("EXP_MARKERTYP_CONDMSG")
    private String expMarkertypCondmsg;

    public String getFabdes() {
        return this.fabdes;
    }

    public void setFabdes(String fabdes) {
        this.fabdes = fabdes;
    }

    public BigInteger getFaborien() {
        return this.faborien;
    }

    public void setFaborien(BigInteger faborien) {
        this.faborien = faborien;
    }

    public String getMarkertyp() {
        return this.markertyp;
    }

    public void setMarkertyp(String markertyp) {
        this.markertyp = markertyp;
    }

    public String getFabtyp() {
        return this.fabtyp;
    }

    public void setFabtyp(String fabtyp) {
        this.fabtyp = fabtyp;
    }

    public String getStr() {
        return this.str;
    }

    public void setStr(String str) {
        this.str = str;
    }

    public String getStripeid() {
        return this.stripeid;
    }

    public void setStripeid(String stripeid) {
        this.stripeid = stripeid;
    }

    public String getInside() {
        return this.inside;
    }

    public void setInside(String inside) {
        this.inside = inside;
    }

    public String getOutside() {
        return this.outside;
    }

    public void setOutside(String outside) {
        this.outside = outside;
    }

    public String getFabdcodelist() {
        return this.fabdcodelist;
    }

    public void setFabdcodelist(String fabdcodelist) {
        this.fabdcodelist = fabdcodelist;
    }

    public String getFabind() {
        return this.fabind;
    }

    public void setFabind(String fabind) {
        this.fabind = fabind;
    }

    public String getCutstr() {
        return this.cutstr;
    }

    public void setCutstr(String cutstr) {
        this.cutstr = cutstr;
    }

    public String getIntrefno() {
        return this.intrefno;
    }

    public void setIntrefno(String intrefno) {
        this.intrefno = intrefno;
    }

    public BigInteger getIntrefnoVer() {
        return this.intrefnoVer;
    }

    public void setIntrefnoVer(BigInteger intrefnoVer) {
        this.intrefnoVer = intrefnoVer;
    }

    public String getEnablesahde() {
        return this.enablesahde;
    }

    public void setEnablesahde(String enablesahde) {
        this.enablesahde = enablesahde;
    }

    public String getSrcCopy() {
        return this.srcCopy;
    }

    public void setSrcCopy(String srcCopy) {
        this.srcCopy = srcCopy;
    }

    public String getOrdcat() {
        return this.ordcat;
    }

    public void setOrdcat(String ordcat) {
        this.ordcat = ordcat;
    }

    public String getOrdertype() {
        return this.ordertype;
    }

    public void setOrdertype(String ordertype) {
        this.ordertype = ordertype;
    }

    public String getCopysrcmsg() {
        return this.copysrcmsg;
    }

    public void setCopysrcmsg(String copysrcmsg) {
        this.copysrcmsg = copysrcmsg;
    }

    public String getChkFablibMat() {
        return this.chkFablibMat;
    }

    public void setChkFablibMat(String chkFablibMat) {
        this.chkFablibMat = chkFablibMat;
    }

    public String getChkOrdfab() {
        return this.chkOrdfab;
    }

    public void setChkOrdfab(String chkOrdfab) {
        this.chkOrdfab = chkOrdfab;
    }

    public String getExpFaborienReq() {
        return this.expFaborienReq;
    }

    public void setExpFaborienReq(String expFaborienReq) {
        this.expFaborienReq = expFaborienReq;
    }

    public String getExpMarkertypReq() {
        return this.expMarkertypReq;
    }

    public void setExpMarkertypReq(String expMarkertypReq) {
        this.expMarkertypReq = expMarkertypReq;
    }

    public String getExpFaborienCondmsg() {
        return this.expFaborienCondmsg;
    }

    public void setExpFaborienCondmsg(String expFaborienCondmsg) {
        this.expFaborienCondmsg = expFaborienCondmsg;
    }

    public String getExpMarkertypCondmsg() {
        return this.expMarkertypCondmsg;
    }

    public void setExpMarkertypCondmsg(String expMarkertypCondmsg) {
        this.expMarkertypCondmsg = expMarkertypCondmsg;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ProcOr105pk0CpyfabgetCpyFabResponsePoutListCpyFab)) return false;
        final ProcOr105pk0CpyfabgetCpyFabResponsePoutListCpyFab procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab = (ProcOr105pk0CpyfabgetCpyFabResponsePoutListCpyFab) o;
        return Objects.equals(getFabdes(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getFabdes()) &&
                Objects.equals(getFaborien(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getFaborien()) &&
                Objects.equals(getMarkertyp(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getMarkertyp()) &&
                Objects.equals(getFabtyp(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getFabtyp()) &&
                Objects.equals(getStr(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getStr()) &&
                Objects.equals(getStripeid(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getStripeid()) &&
                Objects.equals(getInside(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getInside()) &&
                Objects.equals(getOutside(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getOutside()) &&
                Objects.equals(getFabdcodelist(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getFabdcodelist()) &&
                Objects.equals(getFabind(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getFabind()) &&
                Objects.equals(getCutstr(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getCutstr()) &&
                Objects.equals(getIntrefno(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getIntrefno()) &&
                Objects.equals(getIntrefnoVer(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getIntrefnoVer()) &&
                Objects.equals(getEnablesahde(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getEnablesahde()) &&
                Objects.equals(getSrcCopy(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getSrcCopy()) &&
                Objects.equals(getOrdcat(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getOrdcat()) &&
                Objects.equals(getOrdertype(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getOrdertype()) &&
                Objects.equals(getCopysrcmsg(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getCopysrcmsg()) &&
                Objects.equals(getChkFablibMat(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getChkFablibMat()) &&
                Objects.equals(getChkOrdfab(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getChkOrdfab()) &&
                Objects.equals(getExpFaborienReq(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getExpFaborienReq()) &&
                Objects.equals(getExpMarkertypReq(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getExpMarkertypReq()) &&
                Objects.equals(getExpFaborienCondmsg(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getExpFaborienCondmsg()) &&
                Objects.equals(getExpMarkertypCondmsg(), procOr105pk0cpyfabgetCpyFabResponsePoutListCpyFab.getExpMarkertypCondmsg());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getFabdes(),
                getFaborien(),
                getMarkertyp(),
                getFabtyp(),
                getStr(),
                getStripeid(),
                getInside(),
                getOutside(),
                getFabdcodelist(),
                getFabind(),
                getCutstr(),
                getIntrefno(),
                getIntrefnoVer(),
                getEnablesahde(),
                getSrcCopy(),
                getOrdcat(),
                getOrdertype(),
                getCopysrcmsg(),
                getChkFablibMat(),
                getChkOrdfab(),
                getExpFaborienReq(),
                getExpMarkertypReq(),
                getExpFaborienCondmsg(),
                getExpMarkertypCondmsg());
    }
}